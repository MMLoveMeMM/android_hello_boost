minimalistic example for creating an android app using the 'boost' library.
not the compile-only boost stuff, the actual boost library stuff. 

BASED ON

 1. hellojni example from android NDK (under $NDK_ROOT/samples)
 2. first.cpp example from boost_program_options source code
 3. http://www.codexperiments.com/android/2011/05/tips-tricks-building-boost-with-ndk-r5/
    android instructions by user "The Xperimenter". these are the key. 

TESTED ON

 ubuntu linux 10
 android-ndk-r7
 android emulator with CPU armeabi-v7a and OS Anroid 4.0
 boost 1.4.7
 ant 1.8

WHAT DOES IT DO

 it is a normal java android app that passes {"--change-world","hello","world"} 
 to the native code. this code uses boost's program_options and string.hpp
 functions to change 'world' into 'boost' and return the result. 
 Java then prints "hello boost" on the app window. 

HOW TO USE

 0 install android SDK, and android NDK, and get to the point where you can
   compile the hello_jni example and get it running on the emulator or a phone

 0.1 set your NDK_ROOT. example:

  export NDK_ROOT=~/android-ndk-r7

  i know 'The Xperimentors' site uses $ANDROID_NDK, and other sites use other terms.
  but NDK_ROOT is what is inside the NDK's build/*.mk Makefiles

 0.2 download and unpack boost as described at The Xperimenter's website. dont go any further yet. 

 0.3 if your version of bjam is too old (ubuntu 10.04 bjam is too old), 

     apt-get remove bjam
     cd $NDK_ROOT/sources/boost/tools/build/v2
     run bootstrap.sh
     run b2 --prefix=/usr/local
     exit your terminal, open a new one (to reset where shell thinks bjam is)

 0.3 ok now, go and follow the instructions to get boost built from the weblink, 
     editing user-config.jam file as described
     run bjam as described
     ls $NDK_ROOT/sources/boost/android/lib to see if any libs built
    
 1.0 get this android_hello_boost repository

  cd $NDK_ROOT/sources
  git clone git://github.com/donbright/android_hello_boost.git
 
 1.1 create $NDK_ROOT/sources/boost/Android.mk

   I have included the version I used, and named it boostlib_Android.mk 
   You can copy it as follows:

   cp $NDK_ROOT/sources/android_hello_boost/boostlib_Android.mk \
      $NDK_ROOT/sources/boost/Android.mk

   Note that if you want to use other boost libs besides 'program_options', 
   you need to edit this file and add entries for them.

 2.0 build android_hello_boost

  cd $NDK_ROOT/sources/android_hello_boost
  ../../ndk-build

 result should be like this:

 Gdbserver      : [arm-linux-androideabi-4.4.3] libs/armeabi/gdbserver
 Gdbsetup       : libs/armeabi/gdb.setup
 Compile++ thumb  : hello-boost <= hello-boost.cpp
 Compile++ thumb  : hello-boost <= first.cpp
 Prebuilt       : libboost_thread.a <= <NDK>/sources/boost/android/lib/
 Prebuilt       : libboost_program_options.a <= <NDK>/sources/boost/android/lib/
 Prebuilt       : libgnustl_static.a <= <NDK>/sources/cxx-stl/gnu-libstdc++/libs/armeabi/
 SharedLibrary  : libhello-boost.so
 Install        : libhello-boost.so => libs/armeabi/libhello-boost.so
 $

 3.0 install hello_boost to the emulator or phone
 
   ant debug install

Result should be a whole lot of ant jibberish, then 'Success'

 4.0 test it

   look at your emulator/phone. there should be a new app called 'hello boost'
   click it. it should open a window with a grey title bar saying 'hello boost'. 
   then it should print 'hello boost' onto the black section of the screen.

   that 'hello boost' was generated through boost's program_options and string
   functions.

HOW THIS WAS MADE

 I started out with the hellojni example.
 I ran 'android project -p . -whatever' like the instructions say to generate the manifest, etc. 
 I made my own Android.mk based on the instructions from The Xperimenter
 http://www.stackoverflow.com and http://www.cplusplus.com were essential. 

LICENSE

 This contains modifications of code originally copyright by 
 The Android Open Source Project
 and released under the Apache License 2.0
 http://www.apache.org/licenses/LICENSE-2.0.html

 This contains modifications of code originally copyright by Vladimir Prus 
 and released under the Boost Software License 1.0 (first.cpp)
 http://www.boost.org/LICENSE_1_0.txt
